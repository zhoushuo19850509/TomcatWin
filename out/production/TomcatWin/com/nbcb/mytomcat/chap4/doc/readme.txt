Chapter4 Tomcat Default Connector

具体对书本内容的解读，请参考“readme_book.txt”
对具体代码的解读，请参考“readme_code.txt”

==========================感悟
1.关于自研代码的讨论
参考这本书， 做一个“自己”的tomcat，当然是很有乐趣的事情。
但是什么样的tomcat才是“自己”的呢？这章开始，就给出了一个规范：
引入了org.apache.catalina这个package
这个package

2.关于代码分层的讨论
代码为啥要分层？
为啥不能把所有的逻辑糅合在一个类之中？
因为我们要在特定的层中，实现一个特定的功能。
以我们的BootStrap.java为例:
【待补充】

3.关于放弃
每次碰到困难，总有千万次想要放弃=_=###
原因是书本的代码实例内容实在是太少了！
很多时候书本只是提供了一个思路。

怎么解决呢？
(1)兴趣，最重要的还是靠兴趣支撑。
据我观察，绝大部分人都是在现有环境下，安于现状。
屈服于生活的安排，屈服于社会的束缚
这一个个捧着手机，从早忙到晚的人，无异于是一具具没有灵魂的行尸走肉


(2)猜
很多内容需要靠自己去猜。去猜官方可能会怎么实现的

(3)参考官方代码
书本官方提供了源码，也有热心网友提供了书本示例代码。
必要时可以借鉴参考一下思路。
当然，思路可以借鉴，具体的代码实现还是要自己来。
如果光扮演“打字机”的角色，也太没意思了。

(3)目标导向
很多时候我们在某一章会觉得迷茫(就比如第4章)
是因为不清楚我们要干啥，不知道本章的目标是啥。
那么，本章的目标是啥呢？
我们可以提前看一下每章最后的代码示例：
BootStrap.java
这个往往会把本章新开发的内容展示在这里。

(4)回头打基础
我们仔细分析一下第四章，难度到底在哪里？
还不是涉及到Java Thread/synchronized的内容。
这块内容说实话还是有一些难度的。
如果实在啃不下这章，建议回头再补习一下《Thinking in Java》的线程这章。

(5)宏观掌控
回顾一下这章的问题。
其实主要还是一头扎进代码，没有从宏观上理解Default Connector对于多并发的支持方式。
所以后续的工作方式要改进一下：一开始就要从宏观上把控本章内容。然后再钻研细节。

==========================待处理
HttpProcessor.await()/assign()都要进行同步处理
因为涉及了并发。

将这章的各个代码画一个visio类图。
这样后续读代码会方便一些


==========================如何验证这章的成果？
如何验证本章的成果呢？
我们都知道，chap4和chap3相比，最大的新功能，就是加入了对并发的支持。
那么，我们要验证chap4的功能，只要设计一个并发请求的客户端就行了。


==========================client url
http://127.0.0.1:8080/servlet/ModernServlet?name=zhoushuo&company=nbcb


