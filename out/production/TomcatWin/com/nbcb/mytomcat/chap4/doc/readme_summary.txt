我们总结一下，第四章学到了很多东西，
重点是学习了HttpConnector了功能：维护一下线程池(HttpProcessor)，用于处理来自客户端的请求。

但是也要看到，第四章整个开发的时间跨度还是比较久的。
分析一下原因，主要还是在细节上投入的时间比较多。
过多追求了性能的优化。

怎么解决呢？我觉得可以引用中文译者在GITHUB上的README：
“我们应该先从大处着手――先学习方法。
再者，Tomcat大的体系架构基本没变，
如共有4种容器：Engine（引擎）、Host（主机）、Context（上下文）和 Wrapper（包装器）。
后面版本更多是优化如NIO、线程池，以及遵循新的HTTP协议和Servlet规范。”

我们在第四章就深入调式了线程池。
后续我觉得应该先把整体的架构先实现一遍，然后再精雕细琢。
比如追求性能提升/遵循HTTP协议等等。





